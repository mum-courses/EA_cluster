#reference : https://bhavik.io/2017/12/19/consul-with-docker-swarm-mode.html
---
version: '3.3'
networks:
  overlay_net:
    external: true
services:
  # Deploy the consul server instances
  server:
    image: consul:1.6.1
    networks:
      overlay_net:
        aliases:
          - consul.server
    # Start the consul server with the given configuration
    command: "consul agent -config-file /consul/config/consul-server-config.json"
    # Expose port 8500 so we can access the UI and allow connections across datacenters.
    ports:
      - target: 8500
        published: 8500
        mode: host
    # # Mount the configuration and data volumes to the container.
    volumes:
      - /vagrant/consul/config:/consul/config
    # Deploy the consul server on all servers which are managers.
    # Use DNS Round Robin instead VIP for discovery. This ensures we get all running
    # consul server instances when querying consul.server
    deploy:
      mode: global
      endpoint_mode: dnsrr
      update_config:
        parallelism: 1
        failure_action: rollback
        delay: 30s
      restart_policy:
        condition: any
        delay: 5s
        window: 120s
      placement:
        constraints:
          - node.role == manager
  # Deploy the consul agent instances
  client:
    image: consul:1.6.1
    networks:
      overlay_net:
        aliases:
          - consul.client
     # Start the consul agent with the given configuration          
    command: "consul agent -config-file /consul/config/consul-client-config.json"
    ports:
      - target: 8500
        published: 8500
        mode: host
    # Mount the configuration and data volumes to the container.
    volumes:
      - /vagrant/consul/config:/consul/config
    # Deploy the consul agent on all servers which are workers.
    # Use DNS Round Robin instead VIP for discovery.  
    deploy:
      mode: global
      endpoint_mode: dnsrr
      update_config:
        parallelism: 1
        failure_action: rollback
        delay: 30s
      restart_policy:
        condition: any
        delay: 5s
        window: 120s
      placement:
        constraints:
          - node.role == worker
